{"version":"NotebookV1","origId":1745794912677350,"name":"03-Joins-Aggregations","language":"python","commands":[{"version":"CommandV1","origId":1745794912677351,"guid":"ab7b4be5-9553-4758-b595-bfb8216f5639","subtype":"command","commandType":"auto","position":2.0,"command":"%md\n# Aggregations and JOINs\nApache Spark&trade; and Databricks&reg; allow you to create on-the-fly data lakes.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"8d8dedfb-198e-4525-a70f-648b332fd859"},{"version":"CommandV1","origId":1745794912677352,"guid":"a80ccffa-c90d-45cd-910f-2dcb329e0b46","subtype":"command","commandType":"auto","position":3.0,"command":"%md\n### Getting Started\n\nRun the following cell to configure our \"classroom.\"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"780ed665-deeb-479c-9086-46568b7220f5"},{"version":"CommandV1","origId":1745794912677353,"guid":"0ba5192a-1637-481a-af1f-4b6b9202a2db","subtype":"command","commandType":"auto","position":4.0,"command":"%run \"./Includes/Classroom-Setup\"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ab1ed934-c248-4c07-b1cc-094bb6f55e51"},{"version":"CommandV1","origId":1745794912677354,"guid":"18634da6-5d24-4d90-ab84-50cc39bc4968","subtype":"command","commandType":"auto","position":6.0,"command":"%md-sandbox\n## Basic Aggregations\n\nUsing <a \"https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.functions\" target=\"_blank\">built-in Spark functions</a>, you can aggregate data in various ways. \n\nRun the cell below to compute the average of all salaries in the people DataFrame.\n\n<img alt=\"Side Note\" title=\"Side Note\" style=\"vertical-align: text-bottom; position: relative; height:1.75em; top:0.05em; transform:rotate(15deg)\" src=\"https://files.training.databricks.com/static/images/icon-note.webp\"/> By default, you get a floating point value.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"4ccecc14-e22e-4191-b792-7bb32a357429"},{"version":"CommandV1","origId":1745794912677355,"guid":"67f3c6f8-1a8d-4340-a7da-2c3055bb0463","subtype":"command","commandType":"auto","position":8.0,"command":"peopleDF = spark.read.parquet(\"/mnt/training/dataframes/people-10m.parquet\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3bf9764e-a6f3-49d3-b6d9-fa217b2b5d17"},{"version":"CommandV1","origId":1745794912677356,"guid":"b63fb4cd-d792-49ff-8ae1-c48e04f99588","subtype":"command","commandType":"auto","position":9.0,"command":"from pyspark.sql.functions import avg\navgSalaryDF = peopleDF.select(avg(\"salary\").alias(\"averageSalary\"))\n\navgSalaryDF.show()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"88d421ee-ba60-484c-9aee-846b31666a16"},{"version":"CommandV1","origId":1745794912677357,"guid":"42c97c33-3e6d-46d0-9c31-d4a81df7f04c","subtype":"command","commandType":"auto","position":10.0,"command":"%md\nConvert that value to an integer using the `round()` function. See\n<a href \"https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.functions$\" class=\"text-info\">the documentation for <tt>round()</tt></a>\nfor more details.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"6b07f2f5-fa98-4286-a705-da18cd439a96"},{"version":"CommandV1","origId":1745794912677358,"guid":"56477370-4984-422e-a6b3-a1ba999585e3","subtype":"command","commandType":"auto","position":11.0,"command":"from pyspark.sql.functions import round\nroundedAvgSalaryDF = avgSalaryDF.select(round(\"averageSalary\").alias(\"roundedAverageSalary\"))\n\nroundedAvgSalaryDF.show()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3e6ab597-fa00-450c-ac8d-5f1e220e2912"},{"version":"CommandV1","origId":1745794912677359,"guid":"6743d0f7-d124-4ce3-9378-ae163217c24b","subtype":"command","commandType":"auto","position":12.0,"command":"%md\nIn addition to the average salary, what are the maximum and minimum salaries?","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"25618334-c75b-45d6-a730-66b6ec867b04"},{"version":"CommandV1","origId":1745794912677360,"guid":"e52e583d-4c0d-4e12-a568-2ef896d75be0","subtype":"command","commandType":"auto","position":13.0,"command":"from pyspark.sql.functions import min, max\nsalaryDF = peopleDF.select(max(\"salary\").alias(\"max\"), min(\"salary\").alias(\"min\"), round(avg(\"salary\")).alias(\"averageSalary\"))\n\nsalaryDF.show()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"8c3ac059-2356-4193-b0ea-a87ed39947e1"},{"version":"CommandV1","origId":1745794912677361,"guid":"1a6b5663-7744-4dc4-a2e1-f7ac0172930e","subtype":"command","commandType":"auto","position":14.0,"command":"%md\n## Joining Two Data Sets\n\nCorrelate the data in two data sets using a DataFrame join. \n\nThe `people` data set has 10 million names in it. \n\n> How many of the first names appear in Social Security data files? \n\nTo find out, use the Social Security data set with first name popularity data from the United States Social Security Administration. \n\nFor every year from 1880 to 2014, `dbfs:/mnt/training/ssn/names-1880-2016.parquet/` lists the first names of people born in that year, their gender, and the total number of people given that name. \n\nBy joining the `people` data set with `names-1880-2016`, weed out the names that aren't represented in the Social Security data.\n\n(In a real application, you might use a join like this to filter out bad data.)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e4442a1a-5f16-4897-b47c-531426e5fbcd"},{"version":"CommandV1","origId":1745794912677362,"guid":"088d625b-c00c-4c87-be02-c1a1091bc98d","subtype":"command","commandType":"auto","position":16.0,"command":"%md\nStart by taking a look at what the social security data set looks like. Each year is its own directory.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"a3c823aa-e4d4-446a-8fd5-ee832e4eb367"},{"version":"CommandV1","origId":1745794912677363,"guid":"acd6af23-c3c4-4647-a9bd-3bd34f1180bc","subtype":"command","commandType":"auto","position":17.0,"command":"%fs ls dbfs:/mnt/training/ssn/names-1880-2016.parquet/","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ab9b1d40-b045-44f2-82c8-e15f77d7cb85"},{"version":"CommandV1","origId":1745794912677364,"guid":"9d22964b-567e-4f73-9343-80b72a8ab429","subtype":"command","commandType":"auto","position":18.0,"command":"%md\nLet's load this file into a DataFrame and look at the data.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"8a87e850-fac5-4e89-8041-d6099e7292db"},{"version":"CommandV1","origId":1745794912677365,"guid":"59cd94ea-5080-4af1-b6a5-d18975322b48","subtype":"command","commandType":"auto","position":19.0,"command":"ssaDF = spark.read.parquet(\"/mnt/training/ssn/names-1880-2016.parquet/\")\n\ndisplay(ssaDF)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"36ebdd74-0a55-4856-b547-304b2bb0ccd2"},{"version":"CommandV1","origId":1745794912677366,"guid":"8b8169b0-1c15-4b10-968c-02b52a51244c","subtype":"command","commandType":"auto","position":20.0,"command":"%md\nNext, with a quick count of distinct names, get an idea of how many distinct names there are in each of the tables.\n\nDataFrames have a `distinct` method just for this purpose.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"adeaf869-5110-471e-9c36-439b8084f545"},{"version":"CommandV1","origId":1745794912677367,"guid":"ae79d165-44f9-465d-bd29-a618d1549df5","subtype":"command","commandType":"auto","position":21.0,"command":"peopleDistinctNamesDF = peopleDF.select(\"firstName\").distinct()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3c36f292-c931-44b9-9323-1042a0d371ab"},{"version":"CommandV1","origId":1745794912677368,"guid":"b6c45de1-18bc-4bb3-9b65-03ebe48f2bb6","subtype":"command","commandType":"auto","position":22.0,"command":"peopleDistinctNamesDF.count()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"fac7dc36-457d-42e2-abc6-359c10ffd956"},{"version":"CommandV1","origId":1745794912677369,"guid":"bcbfad7b-d7fb-4a2e-9686-aad67a011815","subtype":"command","commandType":"auto","position":23.0,"command":"%md-sandbox\nIn preparation for the join, let's rename the `firstName` column to `ssaFirstName` in the Social Security DataFrame.\n\n<img alt=\"Side Note\" title=\"Side Note\" style=\"vertical-align: text-bottom; position: relative; height:1.75em; top:0.05em; transform:rotate(15deg)\" src=\"https://files.training.databricks.com/static/images/icon-note.webp\"/> Question to ponder: why would we want to do this?","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e63705a4-3025-4907-9d42-295ca7a7517d"},{"version":"CommandV1","origId":1745794912677370,"guid":"fbae67f7-36ba-427a-8a73-557bca99bb0d","subtype":"command","commandType":"auto","position":24.0,"command":"ssaDistinctNamesDF = ssaDF.select(\"firstName\").withColumnRenamed(\"firstName\",'ssaFirstName').distinct()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"a49e7e61-d130-412e-bf2b-5d80b47bf303"},{"version":"CommandV1","origId":1745794912677371,"guid":"3dea3e8e-774b-49e9-a60d-fcd1c735f0a0","subtype":"command","commandType":"auto","position":25.0,"command":"%md\nCount how many distinct names in the Social Security DataFrame.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"77fbc221-46c4-4a27-8451-4ddbc0284872"},{"version":"CommandV1","origId":1745794912677372,"guid":"8caa2a34-a9b2-47d2-a476-4d51ab8112d6","subtype":"command","commandType":"auto","position":26.0,"command":"ssaDistinctNamesDF.count()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"efe79f9d-fafd-4409-b853-68498e838d1e"},{"version":"CommandV1","origId":1745794912677373,"guid":"d2b2e2ef-c339-4fd8-928f-68c10e4d1aa3","subtype":"command","commandType":"auto","position":27.0,"command":"%md\nNow join the two DataFrames.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"d34d9511-3a52-48df-bb8b-240c60a049f8"},{"version":"CommandV1","origId":1745794912677374,"guid":"cd21d236-05ae-4656-ad4d-85c48c478cd4","subtype":"command","commandType":"auto","position":28.0,"command":"from pyspark.sql.functions import col\njoinedDF = peopleDistinctNamesDF.join(ssaDistinctNamesDF, col(\"firstName\") == col(\"ssaFirstName\"))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"6a12d84a-f8e7-455f-b6a4-e95833c5ef09"},{"version":"CommandV1","origId":1745794912677375,"guid":"e84e3953-12e5-4b16-8e2f-56a86a407576","subtype":"command","commandType":"auto","position":29.0,"command":"%md\nHow many are there?","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"4a61fcfc-fb54-49c6-8dcc-1e91af594184"},{"version":"CommandV1","origId":1745794912677376,"guid":"c4d609f0-8796-4efb-b776-d6b0800b2639","subtype":"command","commandType":"auto","position":30.0,"command":"joinedDF.count()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"de875a3b-6290-4c78-895b-4cbde3f73445"},{"version":"CommandV1","origId":1745794912677377,"guid":"560a1e6f-c89f-46a1-80c5-ab335a91a21c","subtype":"command","commandType":"auto","position":31.0,"command":"%md-sandbox\n## Exercise 1\n\nIn the tables above, some of the salaries in the `peopleDF` DataFrame are negative. \n\nThese salaries represent bad data. \n\nYour job is to convert all the negative salaries to positive ones, and then sort the top 20 people by their salary.\n\n<img alt=\"Hint\" title=\"Hint\" style=\"vertical-align: text-bottom; position: relative; height:1.75em; top:0.3em\" src=\"https://files.training.databricks.com/static/images/icon-light-bulb.svg\"/>&nbsp;**Hint:** See the Apache Spark documentation, <a href=\"https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.functions$\" target=\"_blank\">built-in functions</a>.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"2527cfa0-80e4-4123-9643-e6f20670e128"},{"version":"CommandV1","origId":1745794912677378,"guid":"3705526a-e9de-4c88-afc8-c8cac6a302fd","subtype":"command","commandType":"auto","position":32.0,"command":"%md\n### Step 1\nCreate a DataFrame`PeopleWithFixedSalariesDF`, where all the negative salaries have been converted to positive numbers.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"60301377-2b23-42f3-9727-187b6ac7711f"},{"version":"CommandV1","origId":1745794912677379,"guid":"5df929e5-d6dc-44e9-a327-15f298362cbb","subtype":"command","commandType":"auto","position":33.0,"command":"# ANSWER\nfrom pyspark.sql.functions import abs\npeopleWithFixedSalariesDF = peopleDF.select(\"firstName\",\"middleName\",\"lastName\",\"gender\",\"birthDate\",\"ssn\",abs(col(\"salary\")).alias('salary'))\ndisplay(peopleWithFixedSalariesDF)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"009e3a72-20bf-4d7f-92ad-ff752d3b7097"},{"version":"CommandV1","origId":1745794912677380,"guid":"93882850-bb93-4004-9e65-a165264c3140","subtype":"command","commandType":"auto","position":34.0,"command":"# TEST - Run this cell to test your solution.\n\nbelowZero = peopleWithFixedSalariesDF.filter(peopleWithFixedSalariesDF[\"salary\"] < 0).count()\ndbTest(\"DF-L3-belowZero\", 0, belowZero)\n\nprint(\"Tests passed!\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"0fe5a127-8848-4fcf-8fd6-6bdf525ae796"},{"version":"CommandV1","origId":1745794912677381,"guid":"e54faef1-8b9e-4a02-a509-83bd1b65a38e","subtype":"command","commandType":"auto","position":35.0,"command":"%md\n### Step 2\n\nStarting with the `peopleWithFixedSalariesDF` DataFrame, create another DataFrame called `PeopleWithFixedSalariesSortedDF` where:\n0. The data set has been reduced to the first 20 records.\n0. The records are sorted by the column `salary` in ascending order.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"2f124280-ec66-4903-bb6b-20fc81a517a1"},{"version":"CommandV1","origId":1745794912677382,"guid":"5a7db7b6-ff69-42b8-963d-7337ede034fe","subtype":"command","commandType":"auto","position":36.0,"command":"# ANSWER\npeopleWithFixedSalariesSortedDF = peopleWithFixedSalariesDF.select(\"*\").orderBy(\"salary\").limit(20)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"1b1f48f1-716f-478c-9ed2-bc7e06e4f337"},{"version":"CommandV1","origId":1745794912677383,"guid":"4ce2934a-de11-4c98-bdba-b1c5e17fb695","subtype":"command","commandType":"auto","position":37.0,"command":"# TEST - Run this cell to test your solution.\n\nresultsDF = peopleWithFixedSalariesSortedDF.select(\"salary\")\ndbTest(\"DF-L3-count\", 20, resultsDF.count())\n\nprint(\"Tests passed!\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"61a8d0d6-ce96-4f14-803e-c32d8981cee6"},{"version":"CommandV1","origId":1745794912677384,"guid":"d8fcc6a0-9b3c-4490-ad7d-039a38e4bd79","subtype":"command","commandType":"auto","position":38.0,"command":"# TEST - Run this cell to test your solution.\n\nfrom pyspark.sql import Row\n\nresults = resultsDF.collect()\n\ndbTest(\"DF-L3-fixedSalaries-0\", Row(salary=2), results[0])\ndbTest(\"DF-L3-fixedSalaries-1\", Row(salary=3), results[1])\ndbTest(\"DF-L3-fixedSalaries-2\", Row(salary=4), results[2])\n\ndbTest(\"DF-L3-fixedSalaries-10\", Row(salary=19), results[10])\ndbTest(\"DF-L3-fixedSalaries-11\", Row(salary=19), results[11])\ndbTest(\"DF-L3-fixedSalaries-12\", Row(salary=20), results[12])\n\ndbTest(\"DF-L3-fixedSalaries-17\", Row(salary=28), results[17])\ndbTest(\"DF-L3-fixedSalaries-18\", Row(salary=30), results[18]) \ndbTest(\"DF-L3-fixedSalaries-19\", Row(salary=31), results[19]) \n\nprint(\"Tests passed!\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"08542d10-3159-4085-b2d4-d6181d1e1e78"},{"version":"CommandV1","origId":1745794912677385,"guid":"4eff4316-c33e-47f7-ab87-f088573c6efc","subtype":"command","commandType":"auto","position":39.0,"command":"%md\n## Exercise 2\n\nAs a refinement, assume all salaries under $20,000 represent bad rows and filter them out.\n\nAdditionally, categorize each person's salary into $10K groups.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"743559cc-f5f4-4c42-b48e-0bc709689511"},{"version":"CommandV1","origId":1745794912677386,"guid":"cde2fbf9-f185-4f55-ae02-d2e4398deed0","subtype":"command","commandType":"auto","position":40.0,"command":"%md\n### Step 1\n Starting with the `peopleWithFixedSalariesDF` DataFrame, create a DataFrame called `peopleWithFixedSalaries20KDF` where:\n0. The data set excludes all records where salaries are below $20K.\n0. The data set includes a new column called `salary10k`, that should be the salary in groups of 10,000. For example:\n  * A salary of 23,000 should report a value of \"2\".\n  * A salary of 57,400 should report a value of \"6\".\n  * A salary of 1,231,375 should report a value of \"123\".","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"cfccf27e-661f-41f0-9ccf-33aa41f7040f"},{"version":"CommandV1","origId":1745794912677387,"guid":"ab7c18a1-cd2f-403a-8e9e-4da83dba4ddf","subtype":"command","commandType":"auto","position":41.0,"command":"# ANSWER\n\npeopleWithFixedSalaries20KDF = peopleWithFixedSalariesDF.select(\"*\").withColumn(\"salary10k\", round(col(\"salary\")/10000)).filter(\"salary >= 20000\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"1d81a020-40fe-4598-ba78-146dca040fd1"},{"version":"CommandV1","origId":1745794912677388,"guid":"51a16315-f7a1-41d2-af36-ad01e951159d","subtype":"command","commandType":"auto","position":42.0,"command":"# TEST - Run this cell to test your solution.\n\nbelow20K = peopleWithFixedSalaries20KDF.filter(\"salary < 20000\").count()\n \ndbTest(\"DF-L3-count-salaries\", 0, below20K)  \n\nprint(\"Tests passed!\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"95d1773f-b6b9-49d0-b134-2bdcf5dd8fa8"},{"version":"CommandV1","origId":1745794912677389,"guid":"584a6a87-f615-4ef8-9e3a-84aa559cc89f","subtype":"command","commandType":"auto","position":43.0,"command":"# TEST - Run this cell to test your solution.\n\nfrom pyspark.sql.functions import count\nresults = (peopleWithFixedSalaries20KDF \n  .select(\"salary10k\") \n  .groupBy(\"salary10k\") \n  .agg(count(\"*\").alias(\"total\")) \n  .orderBy(\"salary10k\") \n  .limit(5) \n  .collect()\n)\n\ndbTest(\"DF-L3-countSalaries-0\", Row(salary10k=2.0, total=43792), results[0])\ndbTest(\"DF-L3-countSalaries-1\", Row(salary10k=3.0, total=212630), results[1])\ndbTest(\"DF-L3-countSalaries-2\", Row(salary10k=4.0, total=536536), results[2])\ndbTest(\"DF-L3-countSalaries-3\", Row(salary10k=5.0, total=1055261), results[3])\ndbTest(\"DF-L3-countSalaries-4\", Row(salary10k=6.0, total=1623248), results[4])\n\nprint(\"Tests passed!\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"72f26f51-d536-4d10-9d89-350a8930b543"},{"version":"CommandV1","origId":1745794912677390,"guid":"d30c5a3b-9ed3-4dad-be3b-98dfb18e3fe5","subtype":"command","commandType":"auto","position":44.0,"command":"%md\n## Exercise 3\n\nUsing the `peopleDF` DataFrame, count the number of females named Caren who were born before March 1980. ","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"48cba3a0-27d4-4aa0-a58f-ccc07ebaf81a"},{"version":"CommandV1","origId":1745794912677391,"guid":"80931676-672b-4d12-b448-be02a208d6e8","subtype":"command","commandType":"auto","position":45.0,"command":"%md\n### Step 1\n\nStarting with `peopleDF`, create a DataFrame called `carensDF` where:\n0. The result set has a single record.\n0. The data set has a single column named `total`.\n0. The result counts only \n  * Females (`gender`)\n  * First Name is \"Caren\" (`firstName`)\n  * Born before March 1980 (`birthDate`)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"035ef5b6-a538-45da-8665-b61544cbbaf8"},{"version":"CommandV1","origId":1745794912677392,"guid":"871cb098-885a-472b-b434-b1f30a122ea4","subtype":"command","commandType":"auto","position":46.0,"command":"# ANSWER\ncarensDF = (peopleDF \n  .filter(\"birthDate < '1980-03-01' \") \n  .filter(\"firstName = 'Caren' \") \n  .filter(\"gender = 'F' \") \n  .agg(count(\"*\").alias(\"total\"))\n)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c35bf9e2-0a02-407d-b989-b9caa3814d8a"},{"version":"CommandV1","origId":1745794912677393,"guid":"db6b496e-5a60-49b8-a231-d1557dd370c0","subtype":"command","commandType":"auto","position":47.0,"command":"# TEST - Run this cell to test your solution.\n\nrows = carensDF.collect()\n\ndbTest(\"DF-L3-carens-len\", 1, len(rows))\ndbTest(\"DF-L3-carens-total\", Row(total=750), rows[0])\n\nprint(\"Tests passed!\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"639d54d2-0872-4b66-aa5b-a6198fd3a4af"},{"version":"CommandV1","origId":1745794912677394,"guid":"b722b8d3-a90b-47b7-ab21-dd4f2ce5bd8a","subtype":"command","commandType":"auto","position":48.0,"command":"%md\n## Review Questions\n**Q:** What is the DataFrame equivalent of the SQL statement `SELECT count(*) AS total`  \n**A:** ```.agg(count(\"*\").alias(\"total\"))```\n\n**Q:** What is the DataFrame equivalent of the SQL statement \n```SELECT firstName FROM PeopleDistinctNames INNER JOIN SSADistinctNames ON firstName = ssaFirstName```  \n**A:** \n`peopleDistinctNamesDF.join(ssaDistinctNamesDF, peopleDistinctNamesDF(col(\"firstName\")) == col(\"ssaFirstName\"))`","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"a345712a-1e42-4f44-9110-f8b691271653"},{"version":"CommandV1","origId":1745794912677395,"guid":"415c3866-1dcc-48e5-a067-d50e1c3c97ef","subtype":"command","commandType":"auto","position":49.0,"command":"%md\n## Next Steps\n\n* Do the [Challenge Exercise]($./Optional/03-Joins-Aggregations).\n* Start the next lesson, [Accessing Data]($./04-Accessing-Data).","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"a9d7e51a-1859-4e5d-86a2-66e3f4a97360"},{"version":"CommandV1","origId":1745794912677396,"guid":"f24a8b21-766e-44c7-b877-15405407b6a3","subtype":"command","commandType":"auto","position":50.0,"command":"%md\n## Additional Topics & Resources\n\n* <a href=\"http://spark.apache.org/docs/latest/sql-programming-guide.html\" target=\"_blank\">Spark SQL, DataFrames and Datasets Guide</a>\n* <a href=\"https://databricks.com/blog/2017/08/31/cost-based-optimizer-in-apache-spark-2-2.html\" target=\"_blank\">Cost-based Optimizer in Apache Spark 2.2</a>","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"969ca834-7835-4f0a-816a-0b631509d275"}],"dashboards":[],"guid":"810f6322-1835-4899-a91d-0b1af332f6c9","globalVars":{},"iPythonMetadata":null,"inputWidgets":{}}