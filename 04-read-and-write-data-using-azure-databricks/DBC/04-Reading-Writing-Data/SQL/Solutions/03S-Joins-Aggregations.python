{"version":"NotebookV1","origId":1745794912675792,"name":"03S-Joins-Aggregations","language":"python","commands":[{"version":"CommandV1","origId":1745794912675793,"guid":"f08bca90-c8d7-4cbf-b3e5-6a51c7428dc1","subtype":"command","commandType":"auto","position":2.0,"command":"%md\n# Aggregations, JOINs and Nested Queries\nApache Spark&trade; and Databricks&reg; allow you to create on-the-fly data lakes.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"142e2464-2e03-41a0-977a-2c05fb1108c6"},{"version":"CommandV1","origId":1745794912675794,"guid":"758190c2-1875-42d5-9cd9-1a9005eb4bdf","subtype":"command","commandType":"auto","position":3.0,"command":"%md\n### Getting Started\n\nRun the following cell to configure our \"classroom.\"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ca6c82f4-b85a-4f28-9fb1-ff1eac8bec09"},{"version":"CommandV1","origId":1745794912675795,"guid":"5216a1c7-bdae-4e5e-8596-366b8d004ba3","subtype":"command","commandType":"auto","position":4.0,"command":"%run \"./Includes/Classroom-Setup\"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"da2e4112-a8f6-4f2b-88e1-54bd7c7c39b7"},{"version":"CommandV1","origId":1745794912675796,"guid":"570efa54-b5ff-4e5c-9048-83a56e9e098d","subtype":"command","commandType":"auto","position":6.0,"command":"%md-sandbox\n## Basic aggregations\n\nUsing <a href=\"https://spark.apache.org/docs/latest/api/python/pyspark.sql.html#module-pyspark.sql.functions\" target=\"_blank\">built-in Spark functions</a>, you can aggregate data in various ways. \n\nRun the cell below to compute the average of all salaries in the `People10M` table.\n\n<img alt=\"Side Note\" title=\"Side Note\" style=\"vertical-align: text-bottom; position: relative; height:1.75em; top:0.05em; transform:rotate(15deg)\" src=\"https://files.training.databricks.com/static/images/icon-note.webp\"/> By default, you get a floating point value.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"686d5e2a-b1e1-492c-90ab-b83b007db649"},{"version":"CommandV1","origId":1745794912675797,"guid":"d0f46dd2-5d64-43d6-98af-e307b4dfd1d3","subtype":"command","commandType":"auto","position":8.0,"command":"%sql\nSELECT avg(salary) AS averageSalary \nFROM People10M","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3c63e615-c364-4e4e-a97c-6b5473981e7a"},{"version":"CommandV1","origId":1745794912675798,"guid":"d8597f4d-6184-4c55-84d3-58232b856f9c","subtype":"command","commandType":"auto","position":9.0,"command":"%md\nConvert that value to an integer using the SQL `round()` function. See\n<a href=\"http://spark.apache.org/docs/latest/api/python/pyspark.sql.html#pyspark.sql.functions.round\" class=\"text-info\">the PySpark documentation for <tt>round()</tt></a>\nfor more details.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3933a48a-73b7-4685-93c2-a7fe19cdc852"},{"version":"CommandV1","origId":1745794912675799,"guid":"a64a3697-3c4c-44e9-a199-7bd34c74484d","subtype":"command","commandType":"auto","position":10.0,"command":"%sql\nSELECT round(avg(salary)) AS averageSalary \nFROM People10M","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"dafb8684-cfa0-4c53-830c-6ef99de1a02b"},{"version":"CommandV1","origId":1745794912675800,"guid":"0d880831-6cfe-4c2a-9cd3-cfd479d57970","subtype":"command","commandType":"auto","position":11.0,"command":"%md\nIn addition to the average salary, what are the maximum and minimum salaries?","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"f1e85146-3675-46dd-ae03-4a310fc96566"},{"version":"CommandV1","origId":1745794912675801,"guid":"85edb31c-2d15-420a-a635-a7e505e72762","subtype":"command","commandType":"auto","position":12.0,"command":"%sql\nSELECT max(salary) AS max, min(salary) AS min, round(avg(salary)) AS average \nFROM People10M","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"d6413d1e-69ff-4dbb-907f-7f7c7c6a76ea"},{"version":"CommandV1","origId":1745794912675802,"guid":"127b5a07-eb25-4493-955e-88d4b0b1a2ed","subtype":"command","commandType":"auto","position":13.0,"command":"%md\n## Joining two tables\n\nCorrelate the data in two data sets using a SQL join. \n\nThe `People10M` table has 10 million names in it. \n\n> How many of the first names appear in Social Security data files? \n\nTo find out, use the `SSANames` table with first name popularity data from the United States Social Security Administration. \n\nFor every year from 1880 to 2014, `SSANames` lists the first names of people born in that year, their gender, and the total number of people given that name. \n\nBy joining the `People10M` table with `SSANames`, weed out the names that aren't represented in the Social Security data.\n\n(In a real application, you might use a join like this to filter out bad data.)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5fc97ca1-bca0-47ad-b78d-e04896516064"},{"version":"CommandV1","origId":1745794912675803,"guid":"50fc1e55-dbee-4c2c-b96b-822381c48ff5","subtype":"command","commandType":"auto","position":15.0,"command":"%md\nStart by taking a quick peek at what `SSANames` looks like.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"79be6d12-2ee4-433e-aa22-7230e6a95bb1"},{"version":"CommandV1","origId":1745794912675804,"guid":"c14a743f-7fcb-48b2-a470-9c922a9be32c","subtype":"command","commandType":"auto","position":16.0,"command":"%sql\nSELECT * FROM SSANames","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"bf081165-c587-4327-a24a-cfd8314cee2f"},{"version":"CommandV1","origId":1745794912675805,"guid":"9e5eee5f-29f9-46aa-a162-ad53be663ad6","subtype":"command","commandType":"auto","position":17.0,"command":"%md\nNext, get an idea of how many distinct names there are in each of our tables, with a quick count of distinct names.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"522ba0af-b35e-4cc8-88f5-40e4de02842e"},{"version":"CommandV1","origId":1745794912675806,"guid":"3a405253-2785-4969-8d0c-35190303d2c6","subtype":"command","commandType":"auto","position":18.0,"command":"%sql\nSELECT count(DISTINCT firstName) \nFROM People10M","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5dca1580-07d0-45c2-a7f9-7f227f1c71ee"},{"version":"CommandV1","origId":1745794912675807,"guid":"54a9b3d9-a291-42e8-80fa-7f992dd4ebad","subtype":"command","commandType":"auto","position":19.0,"command":"%sql\nSELECT count(DISTINCT firstName)\nFROM SSANames","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"8db0ae6c-0a57-40a8-9e1d-dfeba327c59b"},{"version":"CommandV1","origId":1745794912675808,"guid":"a6caae21-3591-486c-9825-ea22acbdf213","subtype":"command","commandType":"auto","position":20.0,"command":"%md\nBy introducing two more temporary views, each one consisting of distinct names, the join will be easier to read/write.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"a02073f7-5a22-41a7-a92d-ba639e35161d"},{"version":"CommandV1","origId":1745794912675809,"guid":"5b13b06c-630e-4e28-b37f-39af2c78bdf6","subtype":"command","commandType":"auto","position":21.0,"command":"%sql\nCREATE OR REPLACE TEMPORARY VIEW SSADistinctNames AS \n  SELECT DISTINCT firstName AS ssaFirstName \n  FROM SSANames;\n\nCREATE OR REPLACE TEMPORARY VIEW PeopleDistinctNames AS \n  SELECT DISTINCT firstName \n  FROM People10M","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"82e2e299-ba90-460a-b604-5c1978770f9a"},{"version":"CommandV1","origId":1745794912675810,"guid":"75189599-1b29-4854-a032-624b0b528e54","subtype":"command","commandType":"auto","position":22.0,"command":"%md\nNext, join the two tables together to get the answer.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e3ca520d-5117-4d36-9d8d-c60ee899f58c"},{"version":"CommandV1","origId":1745794912675811,"guid":"368ef5af-b01a-483b-b730-536a0b6a113d","subtype":"command","commandType":"auto","position":23.0,"command":"%sql\nSELECT firstName \nFROM PeopleDistinctNames \nINNER JOIN SSADistinctNames ON firstName = ssaFirstName","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e12ff111-e199-4d84-b7ce-66971f755778"},{"version":"CommandV1","origId":1745794912675812,"guid":"0f8448c8-fe6d-48e6-bdaf-985cb389d71a","subtype":"command","commandType":"auto","position":24.0,"command":"%md\nHow many are there?","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ec2d9d80-f633-4b96-8b7f-feadd03b934c"},{"version":"CommandV1","origId":1745794912675813,"guid":"9ed1677b-8a38-4ca8-ad3f-9b5c8525d3a5","subtype":"command","commandType":"auto","position":25.0,"command":"%sql\nSELECT count(*) \nFROM PeopleDistinctNames \nINNER JOIN SSADistinctNames ON firstName = ssaFirstName","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"057ee613-729b-4b9a-af52-7a0b28f7ed6b"},{"version":"CommandV1","origId":1745794912675814,"guid":"085b3d35-e86f-4345-a131-a22f27f8fc55","subtype":"command","commandType":"auto","position":26.0,"command":"%md\n## Nested Queries\n\nJoins are not the only way to solve the problem. \n\nA sub-select works as well.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"d63a14a1-6696-4c84-a4c6-a4d7141aa6b7"},{"version":"CommandV1","origId":1745794912675815,"guid":"961f2716-eb92-48e3-b5a8-53e135c144bd","subtype":"command","commandType":"auto","position":28.0,"command":"%sql\nSELECT count(firstName) \nFROM PeopleDistinctNames\nWHERE firstName IN (\n  SELECT ssaFirstName FROM SSADistinctNames\n)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3c3f00fd-644f-4e75-b967-126fcba74dc8"},{"version":"CommandV1","origId":1745794912675816,"guid":"5d36821e-b2bb-463c-84e4-d878916a61ed","subtype":"command","commandType":"auto","position":29.0,"command":"%md-sandbox\n## Exercise 1\n\nIn the tables above, some of the salaries in the `People10M` table are negative. \n\nThese salaries represent bad data. \n\nYour job is to convert all the negative salaries to positive ones, and then sort the top 20 people by their salary.\n\n<img alt=\"Hint\" title=\"Hint\" style=\"vertical-align: text-bottom; position: relative; height:1.75em; top:0.3em\" src=\"https://files.training.databricks.com/static/images/icon-light-bulb.svg\"/>&nbsp;**Hint:** See the Apache Spark documentation, <a href=\"https://spark.apache.org/docs/latest/api/python/pyspark.sql.html#module-pyspark.sql.functions\" target=\"_blank\">built-in functions</a>.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3952f935-0e0d-4f12-8e87-8dbcb81544e3"},{"version":"CommandV1","origId":1745794912675817,"guid":"f962aea6-fa84-4fe4-b84f-c2ab87a0911f","subtype":"command","commandType":"auto","position":30.0,"command":"%md\n### Step 1\nCreate a temporary view called `PeopleWithFixedSalaries`, where all the negative salaries have been converted to positive numbers.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e1415e17-3c2c-476e-ac0b-aef55ee6a814"},{"version":"CommandV1","origId":1745794912675818,"guid":"96a51fb5-a9a0-4d8a-a8a4-bca74d02f948","subtype":"command","commandType":"auto","position":31.0,"command":"%sql\n-- ANSWER\n\nDROP TABLE IF EXISTS PeopleWithFixedSalaries;\n\nCREATE OR REPLACE TEMPORARY VIEW PeopleWithFixedSalaries AS\n  SELECT firstName, middleName, lastName, gender, birthDate, ssn, abs(salary) AS salary\n  FROM People10M","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"00e7bd06-0017-487d-a30b-8fa9b878138a"},{"version":"CommandV1","origId":1745794912675819,"guid":"47c10b69-0114-4b43-af71-f47eaaacecbf","subtype":"command","commandType":"auto","position":32.0,"command":"%python\n# TEST - Run this cell to test your solution.\n\nbelowZero = spark.read.table(\"PeopleWithFixedSalaries\").where(\"salary < 0\").count()\ndbTest(\"SQL-L3-belowZero\", 0, belowZero)\n\nprint(\"Tests passed!\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"80bbd85c-916a-4384-ba82-555704032938"},{"version":"CommandV1","origId":1745794912675820,"guid":"73a80554-e41f-4da9-8c18-f0dd300912e8","subtype":"command","commandType":"auto","position":33.0,"command":"%md\n### Step 2\n\nStarting with the table `PeopleWithFixedSalaries`, create another view called `PeopleWithFixedSalariesSorted` where:\n0. The data set has been reduced to the first 20 records\n0. The records are sorted by the column `salary` in ascending order","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b1fecb28-34cd-4dad-9202-f32fc1a44f37"},{"version":"CommandV1","origId":1745794912675821,"guid":"b2b7fdbe-fcef-4360-92d2-ca4f21ddd517","subtype":"command","commandType":"auto","position":34.0,"command":"%sql\n-- ANSWER\n\nDROP TABLE IF EXISTS PeopleWithFixedSalariesSorted;\n\nCREATE OR REPLACE TEMPORARY VIEW PeopleWithFixedSalariesSorted AS\n  SELECT * \n  FROM PeopleWithFixedSalaries\n  ORDER BY salary\n  LIMIT 20","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"69ae4dbd-cae8-4609-8bad-336bf66c680d"},{"version":"CommandV1","origId":1745794912675822,"guid":"b385a790-cf67-4456-b887-0842d6bc37e3","subtype":"command","commandType":"auto","position":35.0,"command":"%python\n# TEST - Run this cell to test your solution.\n\nresultsDF = spark.sql(\"select salary from PeopleWithFixedSalariesSorted\")\ndbTest(\"SQL-L3-count\", 20, resultsDF.count())\n\nprint(\"Tests passed!\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"f716fca9-8f26-4f91-b227-f570371dfff3"},{"version":"CommandV1","origId":1745794912675823,"guid":"97efd9a2-819a-4882-9259-adfb34a03c8b","subtype":"command","commandType":"auto","position":36.0,"command":"%python\n# TEST - Run this cell to test your solution.\n\nresults = [r[0] for r in resultsDF.collect()]\n\ndbTest(\"SQL-L3-fixedSalaries-0\", 2, results[0])\ndbTest(\"SQL-L3-fixedSalaries-1\", 3, results[1])\ndbTest(\"SQL-L3-fixedSalaries-2\", 4, results[2])\n\ndbTest(\"SQL-L3-fixedSalaries-10\", 19, results[10])\ndbTest(\"SQL-L3-fixedSalaries-11\", 19, results[11])\ndbTest(\"SQL-L3-fixedSalaries-12\", 20, results[12])\n\ndbTest(\"SQL-L3-fixedSalaries-17\", 28, results[17])\ndbTest(\"SQL-L3-fixedSalaries-18\", 30, results[18])\ndbTest(\"SQL-L3-fixedSalaries-19\", 31, results[19])\n\nprint(\"Tests passed!\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"1eafdbac-5a59-4d39-a19c-6b497320a5c8"},{"version":"CommandV1","origId":1745794912675824,"guid":"e0137389-0f31-4d9e-9999-4fecfe97f2b8","subtype":"command","commandType":"auto","position":37.0,"command":"%md\n## Exercise 2\n\nAs a refinement, assume that all salaries under $20,000 represent bad rows and filter them out.\n\nAdditionally, categorize each person's salary into $10K groups.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"d416c0af-d5bc-4e25-8067-11b83a5de75c"},{"version":"CommandV1","origId":1745794912675825,"guid":"e0a18c66-b076-433c-8217-d72d542a4fe1","subtype":"command","commandType":"auto","position":38.0,"command":"%md\n### Step 1\nCreate a temporary view called `PeopleWithFixedSalaries20K` where:\n0. Start with the table `PeopleWithFixedSalaries`\n0. The data set excludes all records where salaries are below $20K\n0. The data set includes a new column called `salary10k`, that should be the salary in groups of 10,000. For example:\n  * A salary of 23,000 should report a value of \"2\"\n  * A salary of 57,400 should report a value of \"6\"\n  * A salary of 1,231,375 should report a value of \"123\"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"789a314e-e3ba-40cb-84ad-8841290dadb2"},{"version":"CommandV1","origId":1745794912675826,"guid":"7e960d09-8896-443e-b338-eb5cfb3bed1c","subtype":"command","commandType":"auto","position":39.0,"command":"%sql\n-- ANSWER\n\nDROP TABLE IF EXISTS PeopleWithFixedSalaries20K;\n\nCREATE OR REPLACE TEMPORARY VIEW PeopleWithFixedSalaries20K AS\n  SELECT *, round(salary / 10000) AS salary10k \n  FROM PeopleWithFixedSalaries \n  WHERE salary >= 20000","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"6c4eb23e-ef07-4f02-ad68-f99718634782"},{"version":"CommandV1","origId":1745794912675827,"guid":"9ed37441-7516-410c-bc8a-1f3705de4876","subtype":"command","commandType":"auto","position":40.0,"command":"%python\n# TEST - Run this cell to test your solution.\n\nbelow2K = spark.sql(\"select * from PeopleWithFixedSalaries20K where salary < 20000\").count()\ndbTest(\"SQL-L3-count-salaries\", 0, below2K)\n\nprint(\"Tests passed!\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"737ac2eb-f457-46e1-9ff2-9af93927d31b"},{"version":"CommandV1","origId":1745794912675828,"guid":"4cc79bfa-71d4-4205-8886-465c7e74fb50","subtype":"command","commandType":"auto","position":41.0,"command":"%python\n# TEST - Run this cell to test your solution.\n\nresultsDF = spark.sql(\"select salary10k, count(*) as total from PeopleWithFixedSalaries20K  group by salary10k order by salary10k, total limit 5\")\nresults = [ (str(int(r[0]))+\" w/\"+str(r[1])) for r in resultsDF.collect()]\n\ndbTest(\"SQL-L3-countSalaries-0\", \"2 w/43792\", results[0])\ndbTest(\"SQL-L3-countSalaries-1\", \"3 w/212630\", results[1])\ndbTest(\"SQL-L3-countSalaries-2\", \"4 w/536536\", results[2])\ndbTest(\"SQL-L3-countSalaries-3\", \"5 w/1055261\", results[3])\ndbTest(\"SQL-L3-countSalaries-4\", \"6 w/1623248\", results[4])\n\nprint(\"Tests passed!\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"7035e9d5-d598-4206-a5f1-fe87e08c0559"},{"version":"CommandV1","origId":1745794912675829,"guid":"dfa9f37a-fd9a-4a12-9436-9f1358bc14c2","subtype":"command","commandType":"auto","position":42.0,"command":"%md\n## Exercise 3\n\nUsing the `People10M` table, count the number of females named Caren who were born before March 1980. ","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"4434f937-5685-48fd-832e-95603e458943"},{"version":"CommandV1","origId":1745794912675830,"guid":"e33904dd-42df-4f84-8ac6-5bf94772dfff","subtype":"command","commandType":"auto","position":43.0,"command":"%md\n### Step 1\nStarting with the table `People10M`, create a temporary view called `Carens` where:\n0. The result set has a single record\n0. The data set has a single column named `total`\n0. The result counts only \n  * Females (`gender`)\n  * First Name is \"Caren\" (`firstName`)\n  * Born before March 1980 (`birthDate`)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5761a727-ce99-4f77-9e6e-dd8fc344207d"},{"version":"CommandV1","origId":1745794912675831,"guid":"8d437ff3-71bd-4d6f-809f-9a74f3b93265","subtype":"command","commandType":"auto","position":44.0,"command":"%sql\n-- ANSWER\n\nDROP TABLE IF EXISTS Carens;\n\nCREATE TEMPORARY VIEW Carens AS\n  SELECT count(*) AS total \n  FROM People10M\n  WHERE birthDate < '1980-03-01' AND firstName = 'Caren' AND gender = 'F'","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ab3659e5-cb13-465f-84e3-5fe00dfbf347"},{"version":"CommandV1","origId":1745794912675832,"guid":"8bb104de-45ea-4ecc-98aa-e7497cd29299","subtype":"command","commandType":"auto","position":45.0,"command":"%python\n# TEST - Run this cell to test your solution.\n\nrows = spark.sql(\"SELECT total FROM Carens\").collect()\ndbTest(\"SQL-L3-carens-len\", 1, len(rows))\ndbTest(\"SQL-L3-carens-total\", 750, rows[0].total)\n\nprint(\"Tests passed!\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"27fbce35-8c4c-44ec-9b92-269f586b151f"},{"version":"CommandV1","origId":1745794912675833,"guid":"04a068c8-9fe5-41a9-8950-f018840e4b2f","subtype":"command","commandType":"auto","position":46.0,"command":"%md\n## Next Steps\n\n* Do the [Challenge Exercise]($./Optional/03-Joins-Aggregations).\n* Start the next lesson, [Accessing Data]($./04S-Accessing-Data).","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"34347f1d-a8c9-40bb-99e2-4f2cf10728a3"},{"version":"CommandV1","origId":1745794912675834,"guid":"341b291a-9f75-47c5-b9c8-56701f49ae15","subtype":"command","commandType":"auto","position":47.0,"command":"%md\n## Additional Topics & Resources\n\n* <a href=\"https://docs.databricks.com/spark/latest/spark-sql/index.html\" target=\"_blank\">Spark SQL Reference</a>\n* <a href=\"http://spark.apache.org/docs/latest/sql-programming-guide.html\" target=\"_blank\">Spark SQL, DataFrames and Datasets Guide</a>\n* <a href=\"https://databricks.com/blog/2017/08/31/cost-based-optimizer-in-apache-spark-2-2.html\" target=\"_blank\">Cost-based Optimizer in Apache Spark 2.2</a>","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"cd33f410-1a1b-4dce-9077-4942d18ead53"}],"dashboards":[],"guid":"26272a33-1839-4106-a429-5994939dca9f","globalVars":{},"iPythonMetadata":null,"inputWidgets":{}}