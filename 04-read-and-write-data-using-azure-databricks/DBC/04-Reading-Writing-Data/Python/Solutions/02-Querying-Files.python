{"version":"NotebookV1","origId":1745794912677631,"name":"02-Querying-Files","language":"python","commands":[{"version":"CommandV1","origId":1745794912677632,"guid":"eafa6684-63dc-4006-9e3c-b53b66852d8f","subtype":"command","commandType":"auto","position":2.0,"command":"%md-sandbox\n# Querying Files with Dataframes\n\nApache Spark&trade; and Databricks&reg; allow you to use DataFrames to query large data files.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"1abd0e47-37e4-4ff2-8bb9-7e133efa8e01"},{"version":"CommandV1","origId":1745794912677633,"guid":"8e0d3c02-a6b7-4b41-8478-7d9056adf514","subtype":"command","commandType":"auto","position":3.0,"command":"%md-sandbox\n### Getting Started\n\nRun the following cell to configure our \"classroom.\"\n\n<img alt=\"Side Note\" title=\"Side Note\" style=\"vertical-align: text-bottom; position: relative; height:1.75em; top:0.05em; transform:rotate(15deg)\" src=\"https://files.training.databricks.com/static/images/icon-note.webp\"/> Remember to attach your notebook to a cluster; click  <b>Detached</b> in the upper left hand corner and then select your preferred cluster.\n\n<img src=\"https://files.training.databricks.com/images/eLearning/attach-to-cluster.png\" style=\"border: 1px solid #aaa; border-radius: 10px 10px 10px 10px; box-shadow: 5px 5px 5px #aaa\"/>","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"03b100cc-ce1d-41af-9cde-a559fd3fe711"},{"version":"CommandV1","origId":1745794912677634,"guid":"51eee1c9-6e99-4301-a3c2-4947e005f25e","subtype":"command","commandType":"auto","position":4.0,"command":"%run \"./Includes/Classroom-Setup\"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"0356e9ff-fc19-4c82-af34-0588f41daef3"},{"version":"CommandV1","origId":1745794912677635,"guid":"aafac3a7-8754-4311-b932-50f7cc4171db","subtype":"command","commandType":"auto","position":6.0,"command":"%md\n### Introducing DataFrames\n\nUnder the covers, DataFrames are derived from data structures known as Resilient Distributed Datasets (RDDs). RDDs and DataFrames are immutable distributed collections of data. Let's take a closer look at what some of these terms mean before we understand how they relate to DataFrames:\n\n* **Resilient**: They are fault tolerant, so if part of your operation fails, Spark  quickly recovers the lost computation.\n* **Distributed**: RDDs are distributed across networked machines known as a cluster.\n* **DataFrame**: A data structure where data is organized into named columns, like a table in a relational database, but with richer optimizations under the hood. \n\nWithout the named columns and declared types provided by a schema, Spark wouldn't know how to optimize the executation of any computation. Since DataFrames have a schema, they use the Catalyst Optimizer to determine the optimal way to execute your code.\n\nDataFrames were invented because the business community uses tables in a relational database, Pandas or R DataFrames, or Excel worksheets. A Spark DataFrame is conceptually equivalent to these, with richer optimizations under the hood and the benefit of being distributed across a cluster.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5d7a70af-66c5-4836-b4a3-820b3b16f934"},{"version":"CommandV1","origId":1745794912677636,"guid":"29477acc-7ce6-4c65-977c-41fa940abdb1","subtype":"command","commandType":"auto","position":7.0,"command":"%md\n#### Interacting with DataFrames\n\nOnce created (instantiated), a DataFrame object has methods attached to it. Methods are operations one can perform on DataFrames such as filtering,\ncounting, aggregating and many others.\n\n> <b>Example</b>: To create (instantiate) a DataFrame, use this syntax: `df = ...`\n\nTo display the contents of the DataFrame, apply a `show` operation (method) on it using the syntax `df.show()`. \n\nThe `.` indicates you are *applying a method on the object*.\n\nIn working with DataFrames, it is common to chain operations together, such as: `df.select().filter().orderBy()`.  \n\nBy chaining operations together, you don't need to save intermediate DataFrames into local variables (thereby avoiding the creation of extra objects).\n\nAlso note that you do not have to worry about how to order operations because the optimizier determines the optimal order of execution of the operations for you.\n\n`df.select(...).orderBy(...).filter(...)`\n\nversus\n\n`df.filter(...).select(...).orderBy(...)`","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"46e8003d-19d8-4199-ba02-bd6521effb62"},{"version":"CommandV1","origId":1745794912677637,"guid":"47ac8c97-d1ad-4517-8318-6bf78aa31afb","subtype":"command","commandType":"auto","position":8.0,"command":"%md-sandbox\n#### DataFrames and SQL\n\nDataFrame syntax is more flexible than SQL syntax. Here we illustrate general usage patterns of SQL and DataFrames.\n\nSuppose we have a data set we loaded as a table called `myTable` and an equivalent DataFrame, called `df`.\nWe have three fields/columns called `col_1` (numeric type), `col_2` (string type) and `col_3` (timestamp type)\nHere are basic SQL operations and their DataFrame equivalents. \n\nNotice that columns in DataFrames are referenced by `col(\"<columnName>\")`.\n\n| SQL                                         | DataFrame (Python)                    |\n| ------------------------------------------- | ------------------------------------- | \n| `SELECT col_1 FROM myTable`                 | `df.select(col(\"col_1\"))`             | \n| `DESCRIBE myTable`                          | `df.printSchema()`                    | \n| `SELECT * FROM myTable WHERE col_1 > 0`     | `df.filter(col(\"col_1\") > 0)`         | \n| `..GROUP BY col_2`                          | `..groupBy(col(\"col_2\"))`             | \n| `..ORDER BY col_2`                          | `..orderBy(col(\"col_2\"))`             | \n| `..WHERE year(col_3) > 1990`                | `..filter(year(col(\"col_3\")) > 1990)` | \n| `SELECT * FROM myTable LIMIT 10`            | `df.limit(10)`                        |\n| `display(myTable)` (text format)            | `df.show()`                           | \n| `display(myTable)` (html format)            | `display(df)`                         |\n\n<img alt=\"Hint\" title=\"Hint\" style=\"vertical-align: text-bottom; position: relative; height:1.75em; top:0.3em\" src=\"https://files.training.databricks.com/static/images/icon-light-bulb.svg\"/>&nbsp;**Hint:** You can also run SQL queries with the special syntax `spark.sql(\"SELECT * FROM myTable\")`\n\nIn this course you see many other usages of DataFrames. It is left up to you to figure out the SQL equivalents \n(left as exercises in some cases).","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c3ebceea-3a42-4bbc-be58-13d1663adee5"},{"version":"CommandV1","origId":1745794912677638,"guid":"c3ab03de-e734-4dcd-806b-c0398299916b","subtype":"command","commandType":"auto","position":9.0,"command":"%md\n### Querying Data \nThis lesson uses the `people-10m` data set, which is in Parquet format.\n\nThe data is fictitious; in particular, the Social Security numbers are fake.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"542c871f-7828-4cf9-98bd-5f92fd58439e"},{"version":"CommandV1","origId":1745794912677639,"guid":"b3828d1d-780d-437c-b49b-a04d6964513c","subtype":"command","commandType":"auto","position":11.0,"command":"%md\nRun the command below to see the contents of the `people-10m.parquet` file.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"4f1e2b8d-0d7c-4efa-8560-d65cab25d3d2"},{"version":"CommandV1","origId":1745794912677640,"guid":"bcb98c51-1820-4c37-816c-18d6443d4d44","subtype":"command","commandType":"auto","position":12.0,"command":"%fs ls /mnt/training/dataframes/people-10m.parquet","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"24e40729-8703-4414-be62-45be36919451"},{"version":"CommandV1","origId":1745794912677641,"guid":"4169cb85-a054-4cfa-a912-8b4742663011","subtype":"command","commandType":"auto","position":13.0,"command":"peopleDF = spark.read.parquet(\"/mnt/training/dataframes/people-10m.parquet\")\ndisplay(peopleDF)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5ec0cbad-dfa0-440b-930e-4fce39d8138a"},{"version":"CommandV1","origId":1745794912677642,"guid":"90b92b97-69a3-4524-bfb4-7cc21be3e575","subtype":"command","commandType":"auto","position":14.0,"command":"%md\nTake a look at the schema with the `printSchema` method. This tells you the field name, field type, and whether the column is nullable or not (default is true).","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"bb5db5cb-1379-41fe-9edd-02428d7394cf"},{"version":"CommandV1","origId":1745794912677643,"guid":"eabfbaa8-1d4b-4720-bbf2-3cb1959b4eb9","subtype":"command","commandType":"auto","position":15.0,"command":"peopleDF.printSchema()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b1897459-0b80-49f2-950f-52180373bdec"},{"version":"CommandV1","origId":1745794912677644,"guid":"2cb892ed-264b-49bc-ae8e-18532005bc55","subtype":"command","commandType":"auto","position":16.0,"command":"%md\nAnswer the following question:\n> According to our data, which women were born after 1990?\n\nUse the DataFrame `select` and `filter` methods.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"43299414-f5e4-47f4-ac00-a64e75593738"},{"version":"CommandV1","origId":1745794912677645,"guid":"396edf54-b39d-49bc-a774-fe1bf16580fb","subtype":"command","commandType":"auto","position":17.0,"command":"from pyspark.sql.functions import year\ndisplay(peopleDF \n  .select(\"firstName\",\"middleName\",\"lastName\",\"birthDate\",\"gender\") \n  .filter(\"gender = 'F'\") \n  .filter(year(\"birthDate\") > \"1990\")\n)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"0100b45c-d47f-47e4-b6f9-deb75a5c7e2b"},{"version":"CommandV1","origId":1745794912677646,"guid":"9cb35559-a1f5-46d7-8f58-4e36956dbce3","subtype":"command","commandType":"auto","position":18.0,"command":"%md\n### Built-In Functions\n\nSpark provides a number of <a href=\"https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.functions$\" target=\"_blank\">built-in functions</a>, many of which can be used directly with DataFrames.  Use these functions in the `filter` expressions to filter data and in `select` expressions to create derived columns.\n\nThe following DataFrame statement finds women born after 1990; it uses the `year` function, and it creates a `birthYear` column on the fly.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"9b51caad-a50f-4a96-839b-33ec4319517c"},{"version":"CommandV1","origId":1745794912677647,"guid":"e505001f-11cf-4f8c-bc9c-30cf622d5ea1","subtype":"command","commandType":"auto","position":20.0,"command":"display(peopleDF\n  .select(\"firstName\",\"middleName\",\"lastName\",year(\"birthDate\").alias(\"birthYear\"),\"salary\")\n  .filter(year(\"birthDate\") > \"1990\") \n  .filter(\"gender = 'F' \"))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"12869f14-71b5-46bc-8bca-0fa1ecd4ff38"},{"version":"CommandV1","origId":1745794912677648,"guid":"17cd1a05-9c5e-4193-9f67-18b1beee83db","subtype":"command","commandType":"auto","position":21.0,"command":"%md-sandbox\n### Visualization\n\nDatabricks provides easy-to-use, built-in visualizations for your data. \n\nDisplay the data by invoking the Spark `display` function.\n\nVisualize the query below by selecting the bar graph icon once the table is displayed:\n\n<img src=\"https://files.training.databricks.com/images/eLearning/visualization-1.png\" style=\"border: 1px solid #aaa; padding: 10px; border-radius: 10px 10px 10px 10px\"/>","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"86ff1f3d-d230-4571-8de6-980d09945f04"},{"version":"CommandV1","origId":1745794912677649,"guid":"fe30c4b6-6c2a-4f09-8cee-f60f9743bc39","subtype":"command","commandType":"auto","position":23.0,"command":"%md\nHow many women were named Mary in each year?","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"1a65c72f-8a38-4576-8956-721d4961030e"},{"version":"CommandV1","origId":1745794912677650,"guid":"05f79ccf-92af-45b6-b7d2-7ec3ca8d81b3","subtype":"command","commandType":"auto","position":24.0,"command":"marysDF = (peopleDF.select(year(\"birthDate\").alias(\"birthYear\")) \n  .filter(\"firstName = 'Mary' \") \n  .filter(\"gender = 'F' \") \n  .orderBy(\"birthYear\") \n  .groupBy(\"birthYear\") \n  .count()\n)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"625ada1a-b80b-4cc7-af38-6a82a2ecd4f2"},{"version":"CommandV1","origId":1745794912677651,"guid":"9cd7d71b-25f4-4582-a513-8f06acf543e7","subtype":"command","commandType":"auto","position":25.0,"command":"%md\nTo start the visualization process, first apply the `display` function to the DataFrame. \n\nNext, click the graph button in the bottom left corner (second from left) to display data in different ways.\n\nThe data initially shows up in html format as an `n X 2` column where one column is the `birthYear` and another column is `count`.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"f616fb93-d72e-418e-8c8f-914edcfbce3c"},{"version":"CommandV1","origId":1745794912677652,"guid":"eea84aa4-b785-41ec-91d0-f18c4c7c52ca","subtype":"command","commandType":"auto","position":26.0,"command":"display(marysDF)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"9989bb2f-b363-4f3a-80f4-51bbf46b0821"},{"version":"CommandV1","origId":1745794912677653,"guid":"6aeeb732-f657-45e5-8ab6-6a734fce20cb","subtype":"command","commandType":"auto","position":27.0,"command":"%md\nCompare popularity of two names from 1990.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"18d68b47-55c0-4847-a1ad-b1cdc44d2ea3"},{"version":"CommandV1","origId":1745794912677654,"guid":"94b78a9b-1f33-4590-a3f2-58615e437d13","subtype":"command","commandType":"auto","position":28.0,"command":"from pyspark.sql.functions import col\ndordonDF = (peopleDF \n  .select(year(\"birthDate\").alias(\"birthYear\"), \"firstName\") \n  .filter((col(\"firstName\") == 'Donna') | (col(\"firstName\") == 'Dorothy')) \n  .filter(\"gender == 'F' \") \n  .filter(year(\"birthDate\") > 1990) \n  .orderBy(\"birthYear\") \n  .groupBy(\"birthYear\", \"firstName\") \n  .count()\n)\ndisplay(dordonDF)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"611e7cf7-fb3d-49a7-90fa-3303992734eb"},{"version":"CommandV1","origId":1745794912677655,"guid":"2e3bc93d-dcdd-4da1-b7ce-470def72e3e8","subtype":"command","commandType":"auto","position":29.0,"command":"%md\n### Temporary Views\n\nIn DataFrames, <b>temporary views</b> are used to make the DataFrame available to SQL, and work with SQL syntax seamlessly.\n\nA temporary view gives you a name to query from SQL, but unlike a table it exists only for the duration of your Spark Session. As a result, the temporary view will not carry over when you restart the cluster or switch to a new notebook. It also won't show up in the Data button on the menu on the left side of a Databricks notebook which provides easy access to databases and tables.\n\nThe statement in the following cells create a temporary view containing the same data.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b5af0ffe-c26f-4d89-b697-a6454db7f2c9"},{"version":"CommandV1","origId":1745794912677656,"guid":"e2c9ac8a-5e1c-40d8-b184-1e69b68cf39f","subtype":"command","commandType":"auto","position":31.0,"command":"peopleDF.createOrReplaceTempView(\"People10M\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"7fc0ebf9-e5ab-4842-bd14-71a7f7a88d2e"},{"version":"CommandV1","origId":1745794912677657,"guid":"67460450-3108-4954-b7ab-8338adbef213","subtype":"command","commandType":"auto","position":32.0,"command":"%md\nTo view the contents of temporary view, use select notation.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3de49037-008e-47aa-adc7-e004b196ff94"},{"version":"CommandV1","origId":1745794912677658,"guid":"7f92bb91-8401-4ee4-8b04-810f488f8e4b","subtype":"command","commandType":"auto","position":33.0,"command":"display(spark.sql(\"SELECT * FROM  People10M where firstName = 'Donna' \"))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5d6b4601-61b9-4b70-95fb-b431ae7e41a0"},{"version":"CommandV1","origId":1745794912677659,"guid":"b9f73971-a157-46a3-a9a3-0e84c08f5a31","subtype":"command","commandType":"auto","position":34.0,"command":"%md\nCreate a DataFrame with a more specific query.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"59236ae2-e11a-4cda-bdd0-daddd1b82c17"},{"version":"CommandV1","origId":1745794912677660,"guid":"57a8db39-5083-467a-92f1-db77994ae92f","subtype":"command","commandType":"auto","position":35.0,"command":"womenBornAfter1990DF = (peopleDF \n  .select(\"firstName\", \"middleName\", \"lastName\",year(\"birthDate\").alias(\"birthYear\"), \"salary\") \n  .filter(year(\"birthDate\") > 1990) \n  .filter(\"gender = 'F' \") \n)\ndisplay(womenBornAfter1990DF)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"866c5012-a23b-44e1-bd8b-590c1fd2dbd5"},{"version":"CommandV1","origId":1745794912677661,"guid":"a7b67603-51a8-4e59-b996-0faa97535b03","subtype":"command","commandType":"auto","position":36.0,"command":"%md\nCreate Temporary Views from the `womenBornAfter1990DF` DataFrame","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"770a47ee-6f6d-43fb-b254-034bfaf8e2c4"},{"version":"CommandV1","origId":1745794912677662,"guid":"2eb07ce7-d17b-4986-9229-77125b341c28","subtype":"command","commandType":"auto","position":37.0,"command":"womenBornAfter1990DF.createOrReplaceTempView(\"womenBornAfter1990\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"31ba42e7-1743-41d9-92ad-3cd8bba3477b"},{"version":"CommandV1","origId":1745794912677663,"guid":"d248880d-3734-4474-98cb-9534a008dc18","subtype":"command","commandType":"auto","position":38.0,"command":"%md\nOnce a temporary view has been created, it can be queried as if it were a table. \n\nFind out how many Marys are in the WomenBornAfter1990 DataFrame.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"d873135e-c877-4460-abbe-de173d850eb3"},{"version":"CommandV1","origId":1745794912677664,"guid":"abfe70a3-eeb0-4bba-9824-2b61f948fc28","subtype":"command","commandType":"auto","position":39.0,"command":"display(spark.sql(\"SELECT count(*) FROM womenBornAfter1990 where firstName = 'Mary' \"))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e9b7db77-7328-445f-8c29-5d8d54392829"},{"version":"CommandV1","origId":1745794912677665,"guid":"1272ae3d-7722-442a-9134-b2bebb434250","subtype":"command","commandType":"auto","position":40.0,"command":"%md-sandbox\n## Exercise 1\n\nCreate a DataFrame called top10FemaleFirstNamesDF that contains the 10 most common female first names out of the people data set.\n\n* `firstName` - the first name\n* `total` - the total number of rows with that first name\n\n<img alt=\"Hint\" title=\"Hint\" style=\"vertical-align: text-bottom; position: relative; height:1.75em; top:0.3em\" src=\"https://files.training.databricks.com/static/images/icon-light-bulb.svg\"/>&nbsp;**Hint:** \n* You may need to break ties by using firstName because some of the totals are identical.\n* To restrict the number of names to 10, you need to use the `limit(10)` method.\n* You also need to use the `agg()` method to do a count of `firstName` and give it an alias.\n* The `agg()` method is applied after the `groupBy` since it requires column values to be collected in some fashion.\n* You will need to import the `count` and `desc` methods in Scala or Python, as appropriate.\n\nDisplay the results.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"7ef9e7d4-6ce6-4361-bbdb-42e345d4e55f"},{"version":"CommandV1","origId":1745794912677666,"guid":"270f0dff-1186-4b01-ab35-50baa9998f45","subtype":"command","commandType":"auto","position":41.0,"command":"%md-sandbox\n### Step 1\nCreate a DataFrame called `top10FemaleFirstNamesDF` and display the results.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"1f674961-5510-41dd-8724-f12c1034c9de"},{"version":"CommandV1","origId":1745794912677667,"guid":"b299f772-2cf8-4833-b7ec-bb2377583da6","subtype":"command","commandType":"auto","position":42.0,"command":"# ANSWER\nfrom pyspark.sql.functions import count, desc\n\ntop10FemaleFirstNamesDF = (peopleDF \n  .select(\"firstName\") \n  .filter(\"gender = 'F'\") \n  .groupBy(\"firstName\")\n  .agg(count(\"firstName\").alias(\"total\"))\n  .orderBy(desc(\"total\"), \"firstName\")\n  .limit(10)\n)                           ","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"965a20e3-b57a-4de0-b3b3-dd8958a0e468"},{"version":"CommandV1","origId":1745794912677668,"guid":"c0113c59-61f1-4f5f-83c7-7275fc8e259f","subtype":"command","commandType":"auto","position":43.0,"command":"top10FemaleNamesDF = top10FemaleFirstNamesDF.orderBy(\"firstName\")\n\ndisplay(top10FemaleNamesDF)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b9a5e531-975c-4530-aad7-ae23782c9805"},{"version":"CommandV1","origId":1745794912677669,"guid":"ccd81482-bb31-4b9a-b958-5aec99d8213e","subtype":"command","commandType":"auto","position":44.0,"command":"from pyspark.sql import Row\nresults = top10FemaleNamesDF.collect()\n\ndbTest(\"DF-L2-names-0\", Row(firstName=u\"Alesha\",    total=1368), results[0])  \ndbTest(\"DF-L2-names-1\", Row(firstName=u\"Alice\",     total=1384), results[1])\ndbTest(\"DF-L2-names-2\", Row(firstName=u\"Bridgette\", total=1373), results[2])\ndbTest(\"DF-L2-names-3\", Row(firstName=u\"Cristen\",   total=1375), results[3])\ndbTest(\"DF-L2-names-4\", Row(firstName=u\"Jacquelyn\", total=1381), results[4])\ndbTest(\"DF-L2-names-5\", Row(firstName=u\"Katherin\",  total=1373), results[5])\ndbTest(\"DF-L2-names-6\", Row(firstName=u\"Lashell\",   total=1387), results[6])\ndbTest(\"DF-L2-names-7\", Row(firstName=u\"Louie\",     total=1382), results[7])\ndbTest(\"DF-L2-names-8\", Row(firstName=u\"Lucille\",   total=1384), results[8])\ndbTest(\"DF-L2-names-9\", Row(firstName=u\"Sharyn\",    total=1394), results[9]) \n\nprint(\"Tests passed!\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"95e06142-800b-4731-8414-eab1a5cc51b2"},{"version":"CommandV1","origId":1745794912677670,"guid":"9f18db4b-e483-4979-81d9-bacd7ca069b9","subtype":"command","commandType":"auto","position":45.0,"command":"%md\n### Step 2\n\nConvert the DataFrame to a temporary view and display the contents of the temporary view.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"0a698eb2-8319-4ba4-adec-8c6acc322d30"},{"version":"CommandV1","origId":1745794912677671,"guid":"84272d75-7515-41fe-8c3f-de3529bf3f04","subtype":"command","commandType":"auto","position":46.0,"command":"# ANSWER\ntop10FemaleFirstNamesDF.createOrReplaceTempView(\"Top10FemaleFirstNames\")\nresultsDF = spark.sql(\"SELECT * FROM Top10FemaleFirstNames ORDER BY firstName\")\ndisplay(resultsDF)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"29955ba6-75bd-4f43-b83f-b1efe023374e"},{"version":"CommandV1","origId":1745794912677672,"guid":"d9ade411-fb0c-4b3c-b092-65d1e2d3f79f","subtype":"command","commandType":"auto","position":47.0,"command":"%md\n## Summary\n* Spark DataFrames can be used to query Data Sets.\n* Visualize the results of your queries with built-in Databricks graphs.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"19bb9688-4f31-4ba7-9649-2c0d1e87b08d"},{"version":"CommandV1","origId":1745794912677673,"guid":"10d1312c-4cf5-4d3e-93c8-e8aa57ba829c","subtype":"command","commandType":"auto","position":48.0,"command":"%md\n## Review Questions\n\n**Q:** How do you *create* a DataFrame object?  \n**A:** An object is created by introducing a variable name and equating it to something like `myDataFrameDF =`. \n\n**Q:** What methods (operations) can you perform on a DataFrame object?  \n**A:** The full list is here: <a href=\"http://spark.apache.org/docs/2.0.0/api/python/pyspark.sql.html\" target=\"_blank\"> pyspark.sql module</a>\n\n**Q:** Why do you chain methods (operations) `myDataFrameDF.select().filter().groupBy()`?  \n**A:** To avoid the creation of temporary DataFrames as local variables. \n\nFor example, you could have written the above as: `tempDF1 = myDataFrameDF.select()`,  `tempDF2 = tempDF1.filter()` and\nthen `tempDF2.groupBy()`. \n\nThis is syntatically equivalent, but, notice how you now have extra local variables.\n\n**Q:** What is the DataFrame syntax to create a temporary view?    \n**A:** ```myDF.createOrReplaceTempView(\"MyTempView\")```","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"d2a1c0bc-7104-45d7-a434-7dc134980495"},{"version":"CommandV1","origId":1745794912677674,"guid":"a8fbf66f-aaf4-4cf9-a521-02111f1bdecf","subtype":"command","commandType":"auto","position":49.0,"command":"%md\n## Next Steps\n\nStart the next lesson, [Aggregations, JOINs and Nested Queries]($./03-Joins-Aggregations ).","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"cce43693-5315-4fb0-b3fd-84b5f6e8e26f"},{"version":"CommandV1","origId":1745794912677675,"guid":"e2f3f202-d57f-40fc-8551-89d2ec248e00","subtype":"command","commandType":"auto","position":50.0,"command":"%md\n## Additional Topics & Resources\n\n* <a href=\"https://spark.apache.org/docs/latest/sql-programming-guide.html\" target=\"_blank\">Spark SQL, DataFrames and Datasets Guide</a>","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"4258953226069350","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"8119d7e7-d26b-4e1f-9dcf-ffad42be0793"}],"dashboards":[],"guid":"9e255c76-d823-42cb-bb2a-2465e89aaddc","globalVars":{},"iPythonMetadata":null,"inputWidgets":{}}